{"ast":null,"code":"var _jsxFileName = \"/Users/gkloker/Desktop/React/src/components/Formulario.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({\n  crearCita\n}) => {\n  // crear State de citas\n  const [cita, setCita] = useState({\n    mascota: '',\n    propietario: '',\n    fecha: '',\n    hora: '',\n    sintomas: ''\n  });\n  const [error, setError] = useState(false); // funcion para tomar el valor de lo que escribe en los inputs el usuario\n\n  const actualizarState = e => {\n    setCita({ ...cita,\n      [e.target.name]: e.target.value\n    });\n  }; // extraer los valores\n\n\n  const {\n    mascota,\n    propietario,\n    fecha,\n    hora,\n    sintomas\n  } = cita; // enviar formulario\n\n  const submitCita = e => {\n    e.preventDefault(); // validar\n\n    if (mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '') {\n      setError(true);\n      return;\n    } // eliminar el mensaje previo\n\n\n    setError(false); // asignar un ID\n\n    cita.id = uuid(); // crear la cita\n\n    crearCita(cita); // reciniciar form\n\n    setCita({\n      mascota: '',\n      propietario: '',\n      fecha: '',\n      hora: '',\n      sintomas: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Crear cita\"), error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alerta-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, \"Todos los campos son obligatorios\") : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitCita,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Nombre Mascota\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"mascota\",\n    className: \"u-full-width\",\n    placeholder: \"Nombre Mascota\",\n    onChange: actualizarState,\n    value: mascota,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Nombre Due\\xF1o\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"propietario\",\n    className: \"u-full-width\",\n    placeholder: \"Nombre due\\xF1o de la mascota\",\n    onChange: actualizarState,\n    value: propietario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Fecha\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"fecha\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: fecha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Hora\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    name: \"hora\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: hora,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Sintomas\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"sintomas\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: sintomas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"u-full-width button-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Agregar\")));\n};\n\nFormulario.propTypes = {\n  crearCita: PropTypes.func.isRequired\n};\nexport default Formulario;","map":{"version":3,"sources":["/Users/gkloker/Desktop/React/src/components/Formulario.jsx"],"names":["React","Fragment","useState","uuid","PropTypes","Formulario","crearCita","cita","setCita","mascota","propietario","fecha","hora","sintomas","error","setError","actualizarState","e","target","name","value","submitCita","preventDefault","trim","id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { uuid } from 'uuidv4'; \nimport PropTypes from 'prop-types';\n\nconst Formulario = ({crearCita}) => {\n\n    // crear State de citas\n    const [cita, setCita] = useState({\n        mascota: '',\n        propietario: '',\n        fecha: '',\n        hora: '',\n        sintomas: ''\n    });\n    const [error, setError] = useState(false)\n\n    // funcion para tomar el valor de lo que escribe en los inputs el usuario\n    const actualizarState = e => {\n        setCita({\n            ...cita,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // extraer los valores\n    const { mascota, propietario, fecha, hora, sintomas } = cita;\n\n    // enviar formulario\n    const submitCita = e => {\n        e.preventDefault();\n\n        // validar\n        if(mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '') {\n            setError(true);\n            return;\n        }\n\n        // eliminar el mensaje previo\n        setError(false);\n\n        // asignar un ID\n        cita.id = uuid();\n\n        // crear la cita\n        crearCita(cita);\n\n        // reciniciar form\n        setCita({\n            mascota: '',\n            propietario: '',\n            fecha: '',\n            hora: '',\n            sintomas: ''\n        })\n    }\n\n    return (\n        <Fragment>\n            <h2>Crear cita</h2>\n\n            { error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null}\n\n            <form\n                onSubmit={submitCita}\n            >\n                <label>Nombre Mascota</label>\n                <input \n                    type=\"text\"\n                    name=\"mascota\"\n                    className=\"u-full-width\"\n                    placeholder=\"Nombre Mascota\"\n                    onChange={actualizarState}\n                    value={mascota}\n                />\n\n\n                <label>Nombre Dueño</label>\n                <input \n                    type=\"text\"\n                    name=\"propietario\"\n                    className=\"u-full-width\"\n                    placeholder=\"Nombre dueño de la mascota\"\n                    onChange={actualizarState}\n                    value={propietario}\n                />\n\n\n                <label>Fecha</label>\n                <input \n                    type=\"date\"\n                    name=\"fecha\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={fecha}\n                />\n\n                <label>Hora</label>\n                <input \n                    type=\"time\"\n                    name=\"hora\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={hora}\n                />\n\n                <label>Sintomas</label>\n                <textarea \n                    name=\"sintomas\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={sintomas}\n                ></textarea>\n\n                <button\n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                >Agregar</button>\n            </form>\n        </Fragment>\n    )\n}\n\nFormulario.propTypes = {\n    crearCita: PropTypes.func.isRequired\n}\n\nexport default Formulario;"]},"metadata":{},"sourceType":"module"}